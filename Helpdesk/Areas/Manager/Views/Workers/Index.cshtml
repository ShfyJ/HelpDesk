@model IEnumerable<ITHelpDesk.Models.Workers>

@{
    ViewData["Title"] = "Index";
}

<h1>Сотрудники</h1>

<div class="row">
    <div class="col-6">
        <h2 class="text-primary">Заявки</h2>
    </div>
    <div class="col-6 text-right">
        <a class="btn btn-primary" asp-area="Manager" asp-controller="RequestManager"><i class="fas fa-list"></i> &nbsp; Заявки</a>
    </div>
</div>

<br />
<div class="p-4 border rounded">
    <table id="tblData" class="table table-striped table-bordered  " style="width:100%">
        <thead>
            <tr class="table-info">
                <th>
                    Name
                </th>
                <th>
                    Phone number
                </th>
                <th>
                    Score
                </th>
                <th>
                    # of Performed requests
                </th>
                <th>
                    Queue
                </th>
                <th>
                    State
                </th>

            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr class="table-light">
                    <td>
                        @Html.DisplayFor(modelItem => item.User.Fullname)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.User.PhoneNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Score)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.NOfWorks)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Queue)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.State)
                    </td>
                    @*<td>
                            <a asp-action="Edit" asp-route-id="@item.WorkerId">Edit</a> |
                            <a asp-action="Details" asp-route-id="@item.WorkerId">Details</a> |
                            <a asp-action="Delete" asp-route-id="@item.WorkerId">Delete</a>
                        </td>*@
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Styles -->
<style>
    #chartdiv {
        width: 100%;
        height: 500px;
    }
</style>

<!-- Resources -->
<script src="https://cdn.amcharts.com/lib/4/core.js"></script>
<script src="https://cdn.amcharts.com/lib/4/charts.js"></script>
<script src="https://cdn.amcharts.com/lib/4/themes/animated.js"></script>

<!-- Chart code -->
<script>

    am4core.ready(function () {

        // Themes begin
        am4core.useTheme(am4themes_animated);
        // Themes end

        // Create chart instance
        var chart = am4core.create("chartdiv", am4charts.XYChart);



        chart.data = '';
        let data1 = '';
        let array = [];


        @foreach(var item in Model){
            if (item.Queue != null )
            {
        <text>

        data1 =
            {
                name: "@item.User.Fullname",
                score: "@item.Score",
                queue: "@item.Queue",
                performed: "@item.NOfWorks"
            };
        array.push(data1)
        </text>

                } }

        for (var i in array) {

            var obj = array[i];
            chart.data.push (

                {

                    "Worker": obj.name,
                    "Score": obj.score,
                    "Queue": obj.queue,
                    "Performed": obj.performed,
                },

            );

        }







            // Create axes
            var categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());

            categoryAxis.dataFields.category = "Worker";
            categoryAxis.renderer.grid.template.location = 0;


            var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());
            valueAxis.renderer.inside = true;
            valueAxis.renderer.labels.template.disabled = true;
            valueAxis.min = 0;

            // Create series
            function createSeries(field, name) {

                // Set up series
                var series = chart.series.push(new am4charts.ColumnSeries());
                series.name = name;
                series.dataFields.valueY = field;
                series.dataFields.categoryX = "Worker";
                series.sequencedInterpolation = true;

                // Make it stacked
                series.stacked = true;

                // Configure columns
                series.columns.template.width = am4core.percent(60);
                series.columns.template.tooltipText = "[bold]{name}[/]\n[font-size:14px]{categoryX}: {valueY}";

                // Add label
                var labelBullet = series.bullets.push(new am4charts.LabelBullet());
                labelBullet.label.text = "{valueY}";
                labelBullet.locationY = 0.5;
                labelBullet.label.hideOversized = true;

                return series;
    }



            createSeries("Score", "Балл");
            createSeries("Queue", "Задачи в очереди");
            createSeries("Performed", "Всего выполненных задачи");

            // Legend
            chart.legend = new am4charts.Legend();

        });


</script>

<!-- HTML -->
<div id="chartdiv"></div>